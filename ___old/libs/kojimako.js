// Generated by CoffeeScript 1.9.1
var Kojimako, _, jade, moment, request, restify;

restify = require('restify');

jade = require('jade');

request = require('request');

_ = require('underscore');

moment = require('moment');

Kojimako = (function() {
  function Kojimako(miki1) {
    var miki;
    this.miki = miki1;
    miki = this.miki;
    this.updateSchedule = (function(_this) {
      return function(req, res, next) {
        if (req.params.token !== _this.miki.config.token) {
          res.send(401, "{error: 'wrong token'}");
        } else {
          _this.miki.setSchedule(req.params);
        }
        res.setHeader('Access-Control-Allow-Origin', '*');
        res.setHeader('Content-Type', 'application/json; charset=utf-8');
        return res.end("errcode:0");
      };
    })(this);
    this.getSchedules = function(req, res, next) {
      var respList;
      respList = this.miki.getSchedules().map(function(s) {
        return {
          begin: s.begin,
          end: s.end,
          description: s.description,
          duration: s.duration,
          detail: s.detail,
          order: s.order
        };
      });
      res.setHeader('Access-Control-Allow-Origin', '*');
      res.setHeader('Content-Type', 'application/json; charset=utf-8');
      return res.end(JSON.stringify(respList));
    };
    this.getSchedule = function(req, res, next) {
      console.log("in getscheddule");
      return miki.getSchedule(function(schedule) {
        res.setHeader('Access-Control-Allow-Origin', '*');
        res.setHeader('Content-Type', 'application/json; charset=utf-8');
        return res.end(JSON.stringify(schedule));
      });
    };
    this.getRooms = (function(_this) {
      return function(req, res, next) {
        var roomList;
        roomList = _.chain(_this.miki.getRooms()).filter(function(r) {
          if (r.disabled === false) {
            if (r.always_show === true || r.show_status === 1) {
              return true;
            }
          }
        }).sortBy(function(r) {
          return -r.fans;
        }).map(function(r) {
          var picked;
          picked = _.pick(r, 'room_id', 'show_status', 'show_details', 'show_time', 'room_name', 'live_snapshot', 'owner_avatar', 'fans', 'online', 'live_provider', 'room_url');
          picked.room_name = "" + r.room_name;
          return picked;
        }).value();
        res.setHeader('Access-Control-Allow-Origin', '*');
        res.setHeader('Content-Type', 'application/json; charset=utf-8');
        return res.end(JSON.stringify(roomList));
      };
    })(this);
    this.getDouyuSnapImage = (function(_this) {
      return function(req, res, next) {
        var douyuUrl, options;
        douyuUrl = _this.miki.config.douyuWebPicUrl + req.url.replace('snap/douyu/', '');
        options = _this.miki.createRequestOptions(douyuUrl, 'staticlive.douyutv.com');
        res.setHeader('Access-Control-Allow-Origin', '*');
        req = request(options);
        req.on('response', function(resp) {
          if (resp.statusCode !== 200) {
            console.log(options.url);
            return console.log(resp.statusCode);
          }
        });
        return req.pipe(res, {
          end: true
        });
      };
    })(this);
    this.getZhanqiSnapImage = (function(_this) {
      return function(req, res, next) {
        var options, zhanqiUrl;
        zhanqiUrl = _this.miki.config.zhanqiWebPicUrl + req.url.replace('snap/zhanqi/', '');
        options = _this.miki.createRequestOptions(zhanqiUrl, 'dlpic.cdn.zhanqi.tv');
        res.setHeader('Access-Control-Allow-Origin', '*');
        req = request(options);
        req.on('response', function(resp) {
          if (resp.statusCode !== 200) {
            console.log(options.url);
            return console.log(resp.statusCode);
          }
        });
        return req.pipe(res, {
          end: true
        });
      };
    })(this);
    this.getDouyuAvatarImage = (function(_this) {
      return function(req, res, next) {
        var avatarUrl, options;
        avatarUrl = _this.miki.config.douyuAvatarAPI + req.url.replace('/avatar/douyu/', '');
        options = _this.miki.createRequestOptions(avatarUrl, 'uc.douyutv.com');
        res.setHeader('Access-Control-Allow-Origin', '*');
        req = request(options);
        req.on('response', function(resp) {
          if (resp.statusCode !== 200) {
            console.log(options.url);
            return console.log(resp.statusCode);
          }
        });
        return req.pipe(res);
      };
    })(this);
    this.getZhanqiAvatarImage = (function(_this) {
      return function(req, res, next) {
        var avatarUrl, options;
        avatarUrl = _this.miki.config.zhanqiAvatarAPI + req.url.replace('avatar/zhanqi/', '') + "-big";
        options = _this.miki.createRequestOptions(avatarUrl, 'pic.cdn.zhanqi.tv');
        res.setHeader('Access-Control-Allow-Origin', '*');
        req = request(options);
        req.on('response', function(resp) {
          if (resp.statusCode !== 200) {
            console.log(options.url);
            return console.log(resp.statusCode);
          }
        });
        return req.pipe(res);
      };
    })(this);
    this.renderIndex = (function(_this) {
      return function(req, res, next) {
        var html, schedules;
        console.log('render index');
        schedules = _this.miki.getSchedules();
        html = jade.renderFile('templates/index.jade', {
          schedules: schedules
        });
        return res.end(html);
      };
    })(this);
    this.renderManage = (function(_this) {
      return function(req, res, next) {
        var html, schedules;
        console.log("rendermanage");
        schedules = _this.miki.getSchedules();
        html = jade.renderFile('templates/manage.jade', {
          schedules: schedules
        });
        res.setHeader('Content-Type', 'text/html');
        res.writeHead(200);
        return res.end(html);
      };
    })(this);
    this.renderHeaderless = (function(_this) {
      return function(req, res, next) {
        var html, schedules;
        schedules = _this.miki.getSchedules();
        html = jade.renderFile('templates/headless.jade', {
          schedules: schedules
        });
        res.setHeader('Content-Type', 'text/html');
        res.writeHead(200);
        return res.end(html);
      };
    })(this);
  }

  Kojimako.prototype.startServer = function() {
    var page404, server;
    page404 = '../static_content/404.html';
    server = restify.createServer({
      formatters: {
        'text/html': function(req, res, body) {
          var stat;
          if (res.statusCode === 404) {
            stat = fs.statSync(page404);
            res.cache({
              maxAge: 43200
            });
            res.set('Content-Length', stat.size);
            res.set('Last-Modified', stat.mtime);
            return fs.readFileSync(page404, {
              'encoding': 'utf8'
            });
          }
        }
      }
    });
    server.use(restify.queryParser());
    server.use(restify.bodyParser());
    server.post('/api/list/:token', this.updateSchedule);
    server.get('/api/list/:token', this.getSchedules);
    server.get('/api/list', this.getSchedules);
    server.get('/api/room', this.getRooms);
    console.log("/api/" + this.miki.config.apiVersions.v1 + "/schedule");
    server.get("/api/" + this.miki.config.apiVersions.v1 + "/schedule", this.getSchedule);
    server.get('/headless', this.renderHeaderless);
    server.get('/snap/douyu/.*', this.getDouyuSnapImage);
    server.get('/snap/zhanqi/.*', this.getZhanqiSnapImage);
    server.get('/avatar/douyu/.*', this.getDouyuAvatarImage);
    server.get('/avatar/zhanqi/.*', this.getZhanqiAvatarImage);
    server.get('/' + this.miki.config.managePath, this.renderManage);
    server.get('/', this.renderIndex);
    server.get(/.*/, restify.serveStatic({
      'directory': 'static_content',
      'default': '../index.html',
      'maxAge': 43200
    }));
    return server.listen(this.miki.config.port, (function(_this) {
      return function() {
        console.log("server started:");
        return console.log("http://" + _this.miki.config.host + ":" + _this.miki.config.port + "/");
      };
    })(this));
  };

  return Kojimako;

})();

module.exports = Kojimako;
