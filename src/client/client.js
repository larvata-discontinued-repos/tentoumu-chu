// Generated by CoffeeScript 1.9.3
var FluxibleComponent, HistoryLocation, React, RenderApp, Router, app, dehydratedState, navigateAction;

React = require('react');

app = require('../server/app');

Router = require('react-router');

HistoryLocation = Router.HistoryLocation;

navigateAction = require('../actions/navigate');

FluxibleComponent = require('fluxible/addons/FluxibleComponent');

dehydratedState = window.App;

window.React = React;

RenderApp = function(context, Handler) {
  var Component, mountNode;
  mountNode = document.getElementById('app');
  Component = React.createFactory(Handler);
  return React.render(React.createElement(FluxibleComponent, {
    context: context.getComponentContext()
  }, Component()), mountNode, function() {
    console.log('React Rendered');
  });
};

app.rehydrate(dehydratedState, function(err, context) {
  var firstRender;
  if (err) {
    throw err;
  }
  window.context = context;
  firstRender = true;
  return Router.run(app.getComponent(), HistoryLocation, function(Handler, state) {
    if (firstRender) {
      console.log("frist render");
      console.log(document.getElementById('app').innerHTML);
      RenderApp(context, Handler);
      return firstRender = false;
    } else {
      return context.executeAction(navigateAction, state, function() {
        return RenderApp(context, Handler);
      });
    }
  });
});
