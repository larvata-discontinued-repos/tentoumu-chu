// Generated by CoffeeScript 1.9.3
var _, fetchData, parallels;

_ = require('underscore');

parallels = function(dataRouters, context, routerState, cb) {
  var count, i, len, results, router;
  count = dataRouters.length;
  results = [];
  for (i = 0, len = dataRouters.length; i < len; i++) {
    router = dataRouters[i];
    console.log("router:");
    console.log(router);
    results.push(router.handler.fetchData(context, routerState.params, routerState.query, function(err) {
      console.log("func done.");
      if (--count) {
        return console.log("task last: " + count);
      } else {
        console.log("all done. call callback");
        return cb();
      }
    }));
  }
  return results;
};

fetchData = function(context, routerState, cb) {
  var dataRouters;
  dataRouters = _.filter(routerState.routes, function(route) {
    return route.handler.fetchData;
  });
  if (dataRouters.length === 0) {
    cb();
  }
  return parallels(dataRouters, context, routerState, cb);
};

module.exports = fetchData;
