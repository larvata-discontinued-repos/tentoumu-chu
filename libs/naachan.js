// Generated by CoffeeScript 1.9.1
var Okada, Room, fs, moment, request, roomsData;

request = require('request');

fs = require('fs');

moment = require('moment');

roomsData = [];

Room = (function() {
  function Room(room_id, show_status, room_name, show_time, room_src, url1, owner_uid, show_details, fans, always_show, disabled) {
    this.room_id = room_id;
    this.show_status = show_status;
    this.room_name = room_name;
    this.show_time = show_time;
    this.room_src = room_src;
    this.url = url1;
    this.owner_uid = owner_uid;
    this.show_details = show_details;
    this.fans = fans;
    this.always_show = always_show;
    this.disabled = disabled;
  }

  Room.prototype.duration = function() {
    var timestamp;
    timestamp = parseInt(this.show_time);
    return moment.unix(timestamp).locale('zh-cn').fromNow(true);
  };

  return Room;

})();

Okada = (function() {
  function Okada(miki1) {
    this.miki = miki1;
  }

  Okada.prototype.startMonitor = function() {
    var checker, i, len, miki, r, ref, results, room, url;
    miki = this.miki;
    checker = function(room) {
      return request(room.url, function(err, res, body) {
        var e, obj;
        try {
          obj = JSON.parse(body).data;
          room.show_status = parseInt(obj.show_status);
          room.room_name = obj.room_name;
          room.show_time = obj.show_time;
          room.room_src = obj.room_src;
          room.owner_uid = obj.owner_uid;
          room.show_details = obj.show_details;
          room.fans = obj.fans;
          room.online = obj.online;
          miki.updateRoom(room);
        } catch (_error) {
          e = _error;
          console.log(room.url);
          console.log("------------");
        }
        return setTimeout((function() {
          return function() {
            return checker(room);
          };
        })(), miki.config.roomCheckInterval);
      });
    };
    ref = this.miki.config.roomInfo;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      r = ref[i];
      url = this.miki.config.douyuRoomAPI + r.room_id;
      room = new Room(r.room_id, 0, '', 0, '', url, '', '', 0, r.always_show, r.disabled);
      results.push(checker(room));
    }
    return results;
  };

  return Okada;

})();

module.exports = Okada;
